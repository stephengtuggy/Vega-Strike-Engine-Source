language: cpp
os: linux

services:
  - docker

git:
  submodules: false

dist: focal

# When updating be sure to add a section
# to the matrix to cover the distro
jobs:
    include:
        - os: linux
          compiler: gcc
          name: "Ubuntu 20.04 LTS - GCC"
          env:
            - FROM='ubuntu:focal'
            - COMPILER='gcc'
            - FLAGS='-DUSE_PYTHON_3=OFF'
        - os: linux
          compiler: clang
          name: "Ubuntu 20.04 LTS - Clang"
          env:
            - FROM='ubuntu:focal'
            - COMPILER='clang'
            - FLAGS='-DUSE_PYTHON_3=OFF'
        - os: linux
          compiler: clang
          name: "Ubuntu 20.04 LTS - Py3"
          env:
            - FROM='ubuntu:focal'
            - COMPILER='clang'
            - FLAGS='-DUSE_PYTHON_3=ON'
        - os: linux
          compiler: gcc
          name: "Ubuntu 18.04 LTS - GCC"
          env:
            - FROM='ubuntu:bionic'
            - COMPILER='gcc'
            - FLAGS='-DUSE_PYTHON_3=OFF'
        - os: linux
          compiler: clang
          name: "Ubuntu 18.04 LTS - Clang"
          env:
            - FROM='ubuntu:bionic'
            - COMPILER='clang'
            - FLAGS='-DUSE_PYTHON_3=OFF'
        - os: linux
          compiler: clang
          name: "Ubuntu 18.04 LTS - Py3"
          env:
            - FROM='ubuntu:bionic'
            - COMPILER='clang'
            - FLAGS='-DUSE_PYTHON_3=ON'
        - os: linux
          compiler: gcc
          name: "Ubuntu 16.04 LTS - GCC"
          env:
            - FROM='ubuntu:xenial'
            - COMPILER='gcc'
            - FLAGS='-DUSE_PYTHON_3=OFF'
        - os: linux
          compiler: clang
          name: "Ubuntu 16.04 LTS - Clang"
          env:
            - FROM='ubuntu:xenial'
            - COMPILER='clang'
            - FLAGS='-DUSE_PYTHON_3=OFF'
        - os: linux
          compiler: gcc
          name: "Ubuntu 16.04 LTS - Py3"
          env:
            - FROM='ubuntu:xenial'
            - COMPILER='gcc'
            - FLAGS='-DUSE_PYTHON_3=ON'
        - os: linux
          compiler: clang
          name: "Debian 10 - Py3"
          env:
            - FROM='debian:buster'
            - COMPILER='clang'
            - FLAGS='-DUSE_PYTHON_3=ON'
        - os: linux
          compiler: gcc
          name: "Debian 9 - GCC"
          env:
            - FROM='debian:stretch'
            - COMPILER='gcc'
            - FLAGS='-DUSE_PYTHON_3=OFF'
        - os: linux
          compiler: clang
          name: "openSUSE Leap 15.2 - Py3"
          env:
            - FROM='opensuse/leap'
            - COMPILER='clang'
            - FLAGS='-DUSE_PYTHON_3=ON'
        - os: linux
          compiler: clang
          name: "Fedora 32 - Py3"
          env:
            - FROM='fedora:32'
            - COMPILER='clang'
            - FLAGS='-DUSE_PYTHON_3=ON'
        - os: linux
          compiler: clang
          name: "Fedora 31 - Py3"
          env:
            - FROM='fedora:31'
            - COMPILER='clang'
            - FLAGS='-DUSE_PYTHON_3=ON'
        - os: linux
          compiler: clang
          name: "CentOS 8 - Py3"
          env:
            - FROM='centos:8'
            - COMPILER='clang'
            - FLAGS='-DUSE_PYTHON_3=ON'
        - os: osx
          osx_image: xcode11.3
          env:
            - FLAGS='-DUSE_PYTHON_3=OFF -DBoost_NO_BOOST_CMAKE=ON'
        - os: osx
          osx_image: xcode11.3
          env:
            - FLAGS='-DUSE_PYTHON_3=ON'
    allow_failures:
        - os: osx
        - os: linux
          # dist: xenial
          compiler: clang
          name: "Ubuntu 16.04 LTS - Clang"
          env:
            - FROM='ubuntu:xenial'
            - COMPILER='clang'
            - FLAGS='-DUSE_PYTHON_3=OFF'
    fast_finish: true

addons:
  homebrew:
     update: true
     packages:
      - mesa
      - openal-soft
      - sdl
      - libvorbis
      - jpeg
      - libpng
      - gtk+3
      - gtkglext
      - boost-python

script:
  - ./script/cibuild $FLAGS

# CI/CD hookups
# See https://docs.travis-ci.com/user/deployment/releases/
# for what to do for `before_deploy` and `deploy` sections
#before_deploy:
#  - pull the submodule here
#  - ./script/package
#  - export TRAVIS_TAG="composite tag name here"
#  - git tag ${TRAVIS_TAG}
#deploy:
#    # GitHub Releases
#    provider: releases
#    api_key:
#        secure: "Encrypted GitHub Auth Key" <-- put this in the secrets
#    file:
#       # Upload files in the `packages` directory
#       - packages/*
#    # Ensure the build doesn't get cleaned up so the files are avialable
#    # for the release build
#    skip_clean: true
#    # release is a draft so it can be edited, updated, etc.
#    draft: true
#    # GitHub Releases requires a tag; this guarnatees a tag is set
#    on:
#        tags: true

notifications:
  webhooks:
    if: repo = vegastrike/Vega-Strike-Engine-Source
    urls:
      - https://webhooks.gitter.im/e/1361517953461007f39a  # community room
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always
