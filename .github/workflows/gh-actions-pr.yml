name: 'GH Actions - PR'

on: [ pull_request ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: true
      matrix:
        include:
          - FROM:     'ubuntu:jammy'
            COMPILER: 'gcc'
            OpenGL_GL_PREFERENCE: 'LEGACY'
          - FROM:     'ubuntu:jammy'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'LEGACY'
          - FROM:     'ubuntu:jammy'
            COMPILER: 'gcc'
            OpenGL_GL_PREFERENCE: 'GLVND'
          - FROM:     'ubuntu:jammy'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
          - FROM:     'ubuntu:focal'
            COMPILER: 'gcc'
            OpenGL_GL_PREFERENCE: 'LEGACY'
          - FROM:     'ubuntu:focal'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'LEGACY'
          - FROM:     'ubuntu:focal'
            COMPILER: 'gcc'
            OpenGL_GL_PREFERENCE: 'GLVND'
          - FROM:     'ubuntu:focal'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
          - FROM:     'ubuntu:bionic'
            COMPILER: 'gcc'
            OpenGL_GL_PREFERENCE: 'LEGACY'
          - FROM:     'ubuntu:bionic'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
          - FROM:     'ubuntu:bionic'
            COMPILER: 'gcc'
            OpenGL_GL_PREFERENCE: 'GLVND'
          - FROM:     'ubuntu:bionic'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'LEGACY'
          - FROM:     'linuxmintd/mint21-amd64'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'LEGACY'
          - FROM:     'linuxmintd/mint21-amd64'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
          - FROM:     'linuxmintd/mint20-amd64'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'LEGACY'
          - FROM:     'linuxmintd/mint20-amd64'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
          - FROM:     'debian:bookworm'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'LEGACY'
          - FROM:     'debian:bookworm'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
          - FROM:     'debian:bullseye'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'LEGACY'
          - FROM:     'debian:bullseye'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
          - FROM:     'debian:buster'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'LEGACY'
          - FROM:     'debian:buster'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
          - FROM:     'opensuse/leap:15.4'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'LEGACY'
          - FROM:     'opensuse/leap:15.4'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
          - FROM:     'opensuse/leap:15.3'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'LEGACY'
          - FROM:     'opensuse/leap:15.3'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
          - FROM:     'opensuse/leap:15.2'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'LEGACY'
          - FROM:     'opensuse/leap:15.2'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
          - FROM:     'fedora:37'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'LEGACY'
          - FROM:     'fedora:37'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
          - FROM:     'fedora:36'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'LEGACY'
          - FROM:     'fedora:36'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
          - FROM:     'fedora:35'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'LEGACY'
          - FROM:     'fedora:35'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
          - FROM:     'rockylinux:9.0'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'LEGACY'
          - FROM:     'rockylinux:9.0'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
          - FROM:     'rockylinux:8.6'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'LEGACY'
          - FROM:     'rockylinux:8.6'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
          - FROM:     'rockylinux:8.5'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'LEGACY'
          - FROM:     'rockylinux:8.5'
            COMPILER: 'clang'
            OpenGL_GL_PREFERENCE: 'GLVND'
#          - FROM:     'manjarolinux/base'
#            COMPILER: 'clang'
#            OpenGL_GL_PREFERENCE: 'LEGACY'
#          - FROM:     'manjarolinux/base'
#            COMPILER: 'clang'
#            OpenGL_GL_PREFERENCE: 'GLVND'

    steps:
    - name: Checkout repository
      uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 #v3.5.0
      with:
        fetch-depth: 2
        submodules: false

    # Ensure PRs are built against the PR Head
    # As opposed to the merge commit
    - name: Move to PR HEAD
      run: git checkout ${{ github.event.pull_request.head.sha }}

    - name: Extract short SHA
      shell: bash
      run: |
        echo "SHORT_SHA=`git rev-parse --short ${{ github.event.pull_request.head.sha }}`" >> $GITHUB_ENV
    - name: Test short SHA
      run: |
        echo "${SHORT_SHA}"

    - name: Build and Test
      env:
        FROM:       ${{ matrix.FROM }}
        COMPILER:   ${{ matrix.COMPILER }}
        FLAGS:      '-DOpenGL_GL_PREFERENCE=${{ matrix.OpenGL_GL_PREFERENCE }}'
        MY_OS_NAME: linux
        IS_RELEASE: 0
      run: script/cibuild $FLAGS

    # This is run from inside the Docker container, by script/docker-entrypoint.sh
    # - name: Test
    #   working-directory: ${{github.workspace}}/build
    #   env:
    #     GTEST_OUTPUT: xml
    #     GTEST_COLOR: 1
    #   run: ctest -V

    - name: Upload test results
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: test_results_xml
        path: ${{github.workspace}}/test-results/**/*.xml
