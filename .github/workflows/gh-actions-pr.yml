name: 'GH Actions - PR'

on: [ pull_request ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.allow_failure }}

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        FROM:
          - 'ubuntu:kinetic'
          - 'ubuntu:jammy'
          - 'ubuntu:focal'
          - 'ubuntu:bionic'
          - 'linuxmintd/mint21.1-amd64'
          - 'linuxmintd/mint21-amd64'
          - 'linuxmintd/mint20-amd64'
          - 'debian:bookworm'
          - 'debian:bullseye'
          - 'debian:buster'
          # - 'opensuse/leap:15.5'
          - 'opensuse/leap:15.4'
          - 'opensuse/leap:15.3'
          - 'opensuse/leap:15.2'
          # - 'fedora:38'
          - 'fedora:37'
          - 'fedora:36'
          - 'fedora:35'
          - 'fedora:34'
          - 'rockylinux:9.1'
          - 'rockylinux:9.0'
          - 'rockylinux:8.7'
          - 'rockylinux:8.6'
          - 'rockylinux:8.5'
          # - 'rockylinux:8.4'
          - 'manjarolinux/base'
          - 'funtoo/stage3-generic_64'
        COMPILER:
          - clang
          - gcc
        OpenGL_GL_PREFERENCE:
          - LEGACY
          - GLVND
        ENABLE_PIE:
          - ON
          - OFF
        allow_failure:
          # - false
          - true

    steps:
    - name: Check out repository
      uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 #v3.5.3
      with:
        fetch-depth: 2
        submodules: false

    # Ensure PRs are built against the PR Head
    # As opposed to the merge commit
    - name: Move to PR HEAD
      run: git checkout ${{ github.event.pull_request.head.sha }}

    - name: Extract short SHA
      shell: bash
      run: |
        echo "SHORT_SHA=`git rev-parse --short ${{ github.event.pull_request.head.sha }}`" >> $GITHUB_ENV
    - name: Test short SHA
      run: |
        echo "${SHORT_SHA}"

    - name: Build and Test
      env:
        FROM:       ${{ matrix.FROM }}
        COMPILER:   ${{ matrix.COMPILER }}
        FLAGS:      '-DOpenGL_GL_PREFERENCE=${{ matrix.OpenGL_GL_PREFERENCE }} -DENABLE_PIE=${{ matrix.ENABLE_PIE }}'
        MY_OS_NAME: linux
        IS_RELEASE: 0
      run: script/cibuild $FLAGS

    # This is run from inside the Docker container, by script/docker-entrypoint.sh
    # - name: Test
    #   working-directory: ${{github.workspace}}/build
    #   env:
    #     GTEST_OUTPUT: xml
    #     GTEST_COLOR: 1
    #   run: ctest -V

    - name: Upload test results
      uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce #v3.1.2
      if: failure()
      with:
        name: test_results_xml
        path: ${{github.workspace}}/test-results/**/*.xml
