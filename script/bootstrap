#!/usr/bin/env bash
#====================================
# @file   : bootstrap
# @brief  : installs dependencies for building Vega Strike
# @usage  : sudo script/bootstrap
# @param  : none
#====================================
# Copyright (C) 2020-2022 Stephen G. Tuggy
#
# This file is part of Vega Strike.
#
# Vega Strike is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Vega Strike is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Vega Strike.  If not, see <https://www.gnu.org/licenses/>.

set -e

echo "------------------------------"
echo "--- bootstrap | 2022-05-09 ---"
echo "------------------------------"

if [ -f /etc/os-release ]
then
    export OS_RELEASE_LOCATION="/etc/os-release"
elif [ -f /usr/lib/os-release ]
then
    export OS_RELEASE_LOCATION="/usr/lib/os-release"
else
    echo "os-release file not found; unable to continue"
    exit 1
fi
export LINUX_ID=$(cat $OS_RELEASE_LOCATION | grep ^ID= | sed 's/^ID=//' | tr -d '"\n')
echo "LINUX_ID = ${LINUX_ID}"
export LINUX_CODENAME=$(cat $OS_RELEASE_LOCATION | grep ^VERSION_CODENAME= | sed 's/^VERSION_CODENAME=//' | tr -d '"\n')
echo "LINUX_CODENAME = ${LINUX_CODENAME}"
export LINUX_VERSION_ID=$(cat $OS_RELEASE_LOCATION | grep ^VERSION_ID= | sed 's/^VERSION_ID=//' | tr -d '"\n')
echo "LINUX_VERSION_ID = ${LINUX_VERSION_ID}"

if [ "$LINUX_ID" == "debian" ] && [ "$LINUX_CODENAME" == "bullseye" ]
then
    apt-get update
    apt-get -qy install \
                    git \
                    cmake \
                    python3-dev \
                    build-essential \
                    automake \
                    autoconf \
                    libpng16-16 \
                    libpng-dev \
                    libpng-tools \
                    libjpeg62-turbo-dev \
                    libexpat1-dev \
                    libgtk-3-dev \
                    libopenal-dev \
                    libogg-dev \
                    libvorbis-dev \
                    libglvnd-dev \
                    libgl1-mesa-dev \
                    libsdl1.2-dev \
                    libpostproc-dev \
                    freeglut3-dev \
                    libboost-python-dev \
                    libboost-log-dev \
                    libboost-regex-dev \
                    libxmu-dev \
                    clang \
                    lsb-release
elif [ "$LINUX_ID" == "debian" ] && [ "$LINUX_CODENAME" == "buster" ]
then
    apt-get update
    apt-get -qy install \
                    git \
                    cmake \
                    build-essential \
                    automake \
                    autoconf \
                    libpng16-16 \
                    libpng-dev \
                    libpng-tools \
                    libjpeg62-turbo-dev \
                    libexpat1-dev \
                    libgtk-3-dev \
                    libopenal-dev \
                    libogg-dev \
                    libvorbis-dev \
                    libglvnd-dev \
                    libgl1-mesa-dev \
                    libsdl1.2-dev \
                    libpostproc-dev \
                    freeglut3-dev \
                    libboost-python-dev \
                    libboost-log-dev \
                    libboost-regex-dev \
                    libxmu-dev \
                    clang \
                    lsb-release
elif [ "$LINUX_ID" == "debian" ] && [ "$LINUX_CODENAME" == "stretch" ]
then
    apt-get update
    apt-get -qy install \
                    git \
                    build-essential \
                    automake \
                    autoconf \
                    libpng16-16 \
                    libpng-dev \
                    libpng-tools \
                    libjpeg62-turbo-dev \
                    libexpat1-dev \
                    libgtk-3-dev \
                    libopenal-dev \
                    libogg-dev \
                    libvorbis-dev \
                    libgl1-mesa-dev \
                    libsdl1.2-dev \
                    libpostproc-dev \
                    freeglut3-dev \
                    libboost-python-dev \
                    libboost-log-dev \
                    libboost-regex-dev \
                    libxmu-dev \
                    clang \
                    lsb-release \
                    python3-pip
    pip3 install --upgrade-strategy eager cmake
elif [ "$LINUX_ID" == "ubuntu" ] && [ "$LINUX_CODENAME" == "impish" ]
then
    apt-get update
    apt-get -qy install \
                    git \
                    cmake \
                    python3-dev \
                    build-essential \
                    automake \
                    autoconf \
                    libpng16-16 \
                    libpng-dev \
                    libpng-tools \
                    libjpeg-turbo8-dev \
                    libexpat1-dev \
                    libgdk-pixbuf-2.0-dev \
                    libgtk-3-dev \
                    libopenal-dev \
                    libogg-dev \
                    libvorbis-dev \
                    libglvnd-dev \
                    libgl1-mesa-dev \
                    libsdl1.2-dev \
                    libopengl0 \
                    libpostproc-dev \
                    freeglut3-dev \
                    libboost-python-dev \
                    libboost-log-dev \
                    libboost-regex-dev \
                    libxmu-dev \
                    clang \
                    lsb-release
elif [ "$LINUX_ID" == "ubuntu" ] && [ "$LINUX_CODENAME" == "hirsute" ]
then
    apt-get update
    apt-get -qy install \
                    git \
                    cmake \
                    python3-dev \
                    build-essential \
                    automake \
                    autoconf \
                    libpng16-16 \
                    libpng-dev \
                    libpng-tools \
                    libjpeg62-dev \
                    libexpat1-dev \
                    libgtk-3-dev \
                    libopenal-dev \
                    libogg-dev \
                    libvorbis-dev \
                    libglvnd-dev \
                    libgl1-mesa-dev \
                    libsdl1.2-dev \
                    libopengl0 \
                    libpostproc-dev \
                    freeglut3-dev \
                    libboost-python-dev \
                    libboost-log-dev \
                    libboost-regex-dev \
                    libxmu-dev \
                    clang \
                    lsb-release
elif [ "$LINUX_ID" == "ubuntu" ] && [ "$LINUX_CODENAME" == "groovy" ]
then
    apt-get update
    apt-get -qy install \
                    git \
                    cmake \
                    python3-dev \
                    build-essential \
                    automake \
                    autoconf \
                    libpng16-16 \
                    libpng-dev \
                    libpng-tools \
                    libjpeg62-dev \
                    libexpat1-dev \
                    libgtk-3-dev \
                    libopenal-dev \
                    libogg-dev \
                    libvorbis-dev \
                    libglvnd-dev \
                    libgl1-mesa-dev \
                    libsdl1.2-dev \
                    libopengl0 \
                    libpostproc-dev \
                    freeglut3-dev \
                    libboost-python-dev \
                    libboost-log-dev \
                    libboost-regex-dev \
                    libxmu-dev \
                    clang \
                    lsb-release
elif [ "$LINUX_ID" == "ubuntu" ] && [ "$LINUX_CODENAME" == "focal" ]
then
    apt-get update
    apt-get -qy install \
                    git \
                    cmake \
                    build-essential \
                    automake \
                    autoconf \
                    libpng16-16 \
                    libpng-dev \
                    libpng-tools \
                    libjpeg62-dev \
                    libexpat1-dev \
                    libgtk-3-dev \
                    libopenal-dev \
                    libogg-dev \
                    libvorbis-dev \
                    libglvnd-dev \
                    libgl1-mesa-dev \
                    libsdl1.2-dev \
                    libopengl0 \
                    libpostproc-dev \
                    freeglut3-dev \
                    libboost-python-dev \
                    libboost-log-dev \
                    libboost-regex-dev \
                    libxmu-dev \
                    clang \
                    lsb-release
elif [ "$LINUX_ID" == "ubuntu" ] && [ "$LINUX_CODENAME" == "bionic" ]
then
    apt-get update
    apt-get -qy install \
                    git \
                    build-essential \
                    libglvnd-dev \
                    libgl1-mesa-glx \
                    freeglut3-dev \
                    libopenal-dev \
                    libsdl-gfx1.2-dev \
                    libvorbis-dev \
                    libjpeg-dev \
                    libpng-dev \
                    libgtk-3-dev \
                    libboost-python-dev \
                    libboost-log-dev \
                    libboost-regex-dev \
                    libxmu-dev \
                    clang \
                    lsb-release \
                    python3-pip
    pip3 install --upgrade-strategy eager cmake
elif [ "$LINUX_ID" == "ubuntu" ] && [ "$LINUX_CODENAME" == "xenial" ]
then
    apt-get update
    apt-get -qy install \
                    git \
                    build-essential \
                    libgl1-mesa-dev \
                    freeglut3-dev \
                    libopenal-dev \
                    libsdl-gfx1.2-dev \
                    libvorbis-dev \
                    libjpeg-dev \
                    libpng-dev \
                    libgtk-3-dev \
                    libboost-python-dev \
                    libboost-log-dev \
                    libboost-regex-dev \
                    libxmu-dev \
                    clang \
                    lsb-release \
                    python3-dev \
                    python3-pip
    pip3 install cmake
elif [ "$LINUX_ID" == "linuxmint" ] && [ "$LINUX_CODENAME" == "ulyana" ]
then
    apt-get update
    apt-get -qy install \
                    git \
                    cmake \
                    build-essential \
                    automake \
                    autoconf \
                    libpng16-16 \
                    libpng-dev \
                    libpng-tools \
                    libjpeg62-dev \
                    libexpat1-dev \
                    libgtk-3-dev \
                    libopenal-dev \
                    libogg-dev \
                    libvorbis-dev \
                    libglvnd-dev \
                    libgl1-mesa-dev \
                    libsdl1.2-dev \
                    libopengl0 \
                    libpostproc-dev \
                    freeglut3-dev \
                    libboost-python-dev \
                    libboost-log-dev \
                    libboost-regex-dev \
                    libxmu-dev \
                    clang \
                    lsb-release
elif [ "$LINUX_ID" == "opensuse-leap" ] && ([ $(echo "${LINUX_VERSION_ID}" | cut -f 1 -d '.') -eq 15 ] && [ $(echo "${LINUX_VERSION_ID}" | cut -f 2 -d '.') -ge 2 ])
then
    zypper --non-interactive install -y \
                            libboost_log1_66_0-devel \
                            libboost_python-py3-1_66_0-devel \
                            libboost_system1_66_0-devel \
                            libboost_filesystem1_66_0-devel \
                            libboost_thread1_66_0-devel \
                            libboost_regex1_66_0-devel \
                            libboost_chrono1_66_0-devel \
                            libboost_atomic1_66_0-devel \
                            cmake \
                            gcc-c++ \
                            freeglut-devel \
                            libopenal0 \
                            openal-soft-devel \
                            libSDL-1_2-0 \
                            libSDL-devel \
                            libvorbis-devel \
                            libglvnd-devel \
                            libjpeg-turbo \
                            libjpeg62-devel \
                            libpng16-devel \
                            expat \
                            libexpat-devel \
                            libgtk-3-0 \
                            gtk3-devel \
                            python3-devel \
                            git \
                            rpm-build \
                            clang
elif [ "$LINUX_ID" == "fedora" ] && ([ "$LINUX_VERSION_ID" -ge 34 ] && [ "$LINUX_VERSION_ID" -lt 36 ])
then
    dnf install -y \
                        git \
                        cmake \
                        boost-devel \
                        freeglut-devel \
                        gcc-c++ \
                        openal-soft-devel \
                        SDL-devel \
                        libvorbis-devel \
                        libglvnd-devel \
                        libjpeg-turbo-devel \
                        libpng-devel \
                        expat-devel \
                        gtk3-devel \
                        python3-devel \
                        rpm-build \
                        make \
                        clang
elif [ "$LINUX_ID" == "fedora" ] && ([ "$LINUX_VERSION_ID" -ge 32 ] && [ "$LINUX_VERSION_ID" -lt 34 ])
then
    dnf install -y \
                        git \
                        cmake \
                        boost-devel \
                        boost-python3-devel \
                        freeglut-devel \
                        gcc-c++ \
                        openal-soft-devel \
                        SDL-devel \
                        libvorbis-devel \
                        libjpeg-turbo-devel \
                        libpng-devel \
                        expat-devel \
                        gtk3-devel \
                        python3-devel \
                        rpm-build \
                        make \
                        clang
elif [ "$LINUX_ID" == "fedora" ] && ([ "$LINUX_VERSION_ID" -ge 30 ] && [ "$LINUX_VERSION_ID" -lt 32 ])
then
    dnf install -y \
                        git \
                        cmake \
                        boost-devel \
                        boost-python3-devel \
                        freeglut-devel \
                        gcc-c++ \
                        openal-soft-devel \
                        SDL-devel \
                        libvorbis-devel \
                        libjpeg-turbo-devel \
                        libpng-devel \
                        expat-devel \
                        gtk3-devel \
                        python3-devel \
                        rpm-build \
                        make \
                        clang
elif [ "$LINUX_ID" == "centos" ] && [ "$LINUX_VERSION_ID" -eq 8 ]
then
    dnf -y install dnf-plugins-core
    dnf -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
    dnf config-manager --set-enabled PowerTools
    dnf -y install \
                        git \
                        cmake \
                        boost-devel \
                        boost-python3-devel \
                        freeglut-devel \
                        gcc-c++ \
                        openal-soft-devel \
                        SDL-devel \
                        libvorbis-devel \
                        libjpeg-turbo-devel \
                        libpng-devel \
                        expat-devel \
                        gtk3-devel \
                        python3-devel \
                        rpm-build \
                        make \
                        clang
elif ([ "$LINUX_ID" == "rhel" ] || [ "$LINUX_ID" == "redhat" ]) && [ "$LINUX_VERSION_ID" -eq 8 ]
then
    dnf -y install dnf-plugins-core
    dnf -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
    dnf config-manager --set-enabled PowerTools
    dnf -y install \
                        git \
                        cmake \
                        boost-devel \
                        boost-python3-devel \
                        freeglut-devel \
                        gcc-c++ \
                        openal-soft-devel \
                        SDL-devel \
                        libvorbis-devel \
                        libglvnd-devel \
                        libjpeg-turbo-devel \
                        libpng-devel \
                        expat-devel \
                        gtk3-devel \
                        python3-devel \
                        rpm-build \
                        make \
                        clang
elif [ "$LINUX_ID" == "rocky" ] && ([ $(echo "${LINUX_VERSION_ID}" | cut -f 1 -d '.') -eq 8 ] && [ $(echo "${LINUX_VERSION_ID}" | cut -f 2 -d '.') -ge 4 ])
then
    dnf -y install dnf-plugins-core
    dnf -y install epel-release
    dnf config-manager --enable epel
    dnf config-manager --set-enabled powertools
    dnf -y update
    dnf -y install \
                        git \
                        cmake \
                        boost-devel \
                        boost-python3-devel \
                        freeglut-devel \
                        gcc-c++ \
                        openal-soft-devel \
                        SDL-devel \
                        libvorbis-devel \
                        libglvnd-devel \
                        libjpeg-turbo-devel \
                        libpng-devel \
                        expat-devel \
                        gtk3-devel \
                        python3-devel \
                        rpm-build \
                        make \
                        clang
elif [ "$LINUX_ID" == "manjaro" ]
then
    pamac install  cmake \
                   boost \
                   clang \
                   gcc \
                   gcc-libs \
                   sdl \
                   expat \
                   gtk3 \
                   libglvnd \
                   mesa \
                   python \
                   autoconf \
                   automake \
                   freeglut \
                   git \
                   libjpeg-turbo \
                   libpng \
                   libvorbis \
                   libxmu \
                   openal
else
    echo "Unsupported Linux distribution"
    exit 2
fi

echo "Bootstrapping finished!"
